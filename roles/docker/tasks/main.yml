---

# We won't need to install docker on any debian servers (at least as of now)
#

- name: "Installing docker on Debian."
  become: yes
  block: 

    - name: "Installing docker prerequisite packages on Debian with apt"
      apt:
        name: "{{ packages.present.Debian.docker_pre }}"
        state: latest
        update_cache: yes

    - name: "Adding docker's offical GPG key"
      shell: curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -

    - name: "Adding docker's stable repository"
      shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"

    - name: "Installing docker packages on Debian with apt."
      apt:
        name: "{{ packages.present.Debian.docker }}"
        state: latest
        update_cache: yes

    - name: "Installing docker-compose with pip"
      pip:
        name: docker-compose

    - name: "Start docker service and enabling it (auto-start after reboot)"
      systemd:
        name: docker
        daemon_reload: yes
        enabled: yes
        state: started

  when: ansible_facts['distribution'] == "Debian"


- name: "Installing docker on CentOS."
  become: yes
  block: 

    - name: "Adding docker repository to yum repos"
      shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

    - name: "Installing docker packages on CentOS with yum."
      vars:
        ansible_python_interpreter: "{{ ansible_python2_interpreter }}"
      yum:
        name: "{{ packages.present.CentOS.docker }}"
        state: latest
        update_cache: yes

    - name: "Installing docker-compose with pip"
      pip:
        name: docker-compose

    - name: "Start docker service and enabling it (auto-start after reboot)"
      systemd:
        name: docker
        daemon_reload: yes
        enabled: yes
        state: started

  when: ansible_facts['distribution'] == "CentOS"
